<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace common\models\base;

use Yii;

/**
 * This is the base-model class for table "zone_group".
 *
 * @property integer $id
 * @property string $name
 * @property string $description
 * @property string $zone_group_type
 * @property string $schema_name
 * @property string $table_name
 * @property string $unique_id_column
 * @property string $geometry_column
 * @property string $where_clause
 * @property string $zone_type
 * @property string $created_at
 * @property string $updated_at
 * @property integer $created_by
 * @property integer $updated_by
 *
 * @property \common\models\ZoneZoneGroup[] $zoneZoneGroups
 */
abstract class ZoneGroup extends \yii\db\ActiveRecord
{



    /**
    * ENUM field values
    */
    const ZONE_GROUP_TYPE_LOCAL = 'LOCAL';
    const ZONE_GROUP_TYPE_TABLE = 'TABLE';
    var $enum_labels = false;
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'zone_group';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['name'], 'required'],
            [['zone_group_type'], 'string'],
            [['created_at', 'updated_at'], 'safe'],
            [['created_by', 'updated_by'], 'integer'],
            [['name', 'zone_type'], 'string', 'max' => 40],
            [['description'], 'string', 'max' => 2000],
            [['schema_name', 'table_name', 'unique_id_column', 'geometry_column'], 'string', 'max' => 80],
            [['where_clause'], 'string', 'max' => 4000],
            [['name'], 'unique'],
            ['zone_group_type', 'in', 'range' => [
                    self::ZONE_GROUP_TYPE_LOCAL,
                    self::ZONE_GROUP_TYPE_TABLE,
                ]
            ]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('gip', 'ID'),
            'name' => Yii::t('gip', 'Name'),
            'description' => Yii::t('gip', 'Description'),
            'zone_group_type' => Yii::t('gip', 'Zone Group Type'),
            'schema_name' => Yii::t('gip', 'Schema Name'),
            'table_name' => Yii::t('gip', 'Table Name'),
            'unique_id_column' => Yii::t('gip', 'Unique Id Column'),
            'geometry_column' => Yii::t('gip', 'Geometry Column'),
            'where_clause' => Yii::t('gip', 'Where Clause'),
            'zone_type' => Yii::t('gip', 'Zone Type'),
            'created_at' => Yii::t('gip', 'Created At'),
            'updated_at' => Yii::t('gip', 'Updated At'),
            'created_by' => Yii::t('gip', 'Created By'),
            'updated_by' => Yii::t('gip', 'Updated By'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getZoneZoneGroups()
    {
        return $this->hasMany(\common\models\ZoneZoneGroup::className(), ['zone_group_id' => 'id']);
    }




    /**
     * get column zone_group_type enum value label
     * @param string $value
     * @return string
     */
    public static function getZoneGroupTypeValueLabel($value){
        $labels = self::optsZoneGroupType();
        if(isset($labels[$value])){
            return $labels[$value];
        }
        return $value;
    }

    /**
     * column zone_group_type ENUM value labels
     * @return array
     */
    public static function optsZoneGroupType()
    {
        return [
            self::ZONE_GROUP_TYPE_LOCAL => Yii::t('gip', 'Local'),
            self::ZONE_GROUP_TYPE_TABLE => Yii::t('gip', 'Table'),
        ];
    }

}
