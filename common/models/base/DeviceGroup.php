<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace common\models\base;

use Yii;

/**
 * This is the base-model class for table "device_group".
 *
 * @property integer $id
 * @property string $name
 * @property string $group_type
 * @property string $device_type
 * @property string $description
 * @property string $created_at
 * @property string $updated_at
 * @property integer $created_by
 * @property integer $updated_by
 *
 * @property \common\models\DeviceDeviceGroup[] $deviceDeviceGroups
 * @property \common\models\Rule[] $rules
 */
abstract class DeviceGroup extends \yii\db\ActiveRecord
{



    /**
    * ENUM field values
    */
    const GROUP_TYPE_STATIC = 'STATIC';
    const GROUP_TYPE_TYPED = 'TYPED';
    var $enum_labels = false;
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'device_group';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['name'], 'required'],
            [['group_type'], 'string'],
            [['created_at', 'updated_at'], 'safe'],
            [['created_by', 'updated_by'], 'integer'],
            [['name', 'device_type'], 'string', 'max' => 40],
            [['description'], 'string', 'max' => 2000],
            [['name'], 'unique'],
            ['group_type', 'in', 'range' => [
                    self::GROUP_TYPE_STATIC,
                    self::GROUP_TYPE_TYPED,
                ]
            ]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('gip', 'ID'),
            'name' => Yii::t('gip', 'Name'),
            'group_type' => Yii::t('gip', 'Group Type'),
            'device_type' => Yii::t('gip', 'Device Type'),
            'description' => Yii::t('gip', 'Description'),
            'created_at' => Yii::t('gip', 'Created At'),
            'updated_at' => Yii::t('gip', 'Updated At'),
            'created_by' => Yii::t('gip', 'Created By'),
            'updated_by' => Yii::t('gip', 'Updated By'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getDeviceDeviceGroups()
    {
        return $this->hasMany(\common\models\DeviceDeviceGroup::className(), ['device_group_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getRules()
    {
        return $this->hasMany(\common\models\Rule::className(), ['device_group_id' => 'id']);
    }




    /**
     * get column group_type enum value label
     * @param string $value
     * @return string
     */
    public static function getGroupTypeValueLabel($value){
        $labels = self::optsGroupType();
        if(isset($labels[$value])){
            return $labels[$value];
        }
        return $value;
    }

    /**
     * column group_type ENUM value labels
     * @return array
     */
    public static function optsGroupType()
    {
        return [
            self::GROUP_TYPE_STATIC => Yii::t('gip', 'Static'),
            self::GROUP_TYPE_TYPED => Yii::t('gip', 'Typed'),
        ];
    }

}
