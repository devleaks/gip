<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace common\models\base;

use Yii;

/**
 * This is the base-model class for table "zone".
 *
 * @property integer $id
 * @property string $name
 * @property string $description
 * @property string $zone_type
 * @property string $zone_dimension
 * @property resource $geometry
 * @property string $created_at
 * @property string $updated_at
 * @property integer $created_by
 * @property integer $updated_by
 */
abstract class Zone extends \yii\db\ActiveRecord
{



    /**
    * ENUM field values
    */
    const ZONE_DIMENSION_2D = '2D';
    const ZONE_DIMENSION_3D = '3D';
    var $enum_labels = false;
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'zone';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['name', 'zone_dimension'], 'required'],
            [['zone_dimension', 'geometry'], 'string'],
            [['created_at', 'updated_at'], 'safe'],
            [['created_by', 'updated_by'], 'integer'],
            [['name', 'zone_type'], 'string', 'max' => 40],
            [['description'], 'string', 'max' => 2000],
            [['name'], 'unique'],
            ['zone_dimension', 'in', 'range' => [
                    self::ZONE_DIMENSION_2D,
                    self::ZONE_DIMENSION_3D,
                ]
            ]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('gip', 'ID'),
            'name' => Yii::t('gip', 'Name'),
            'display_name' => Yii::t('gip', 'Display Name'),
            'description' => Yii::t('gip', 'Description'),
            'zone_type' => Yii::t('gip', 'Zone Type'),
            'zone_dimension' => Yii::t('gip', 'Zone Dimension'),
            'geometry' => Yii::t('gip', 'Geometry'),
            'created_at' => Yii::t('gip', 'Created At'),
            'updated_at' => Yii::t('gip', 'Updated At'),
            'created_by' => Yii::t('gip', 'Created By'),
            'updated_by' => Yii::t('gip', 'Updated By'),
        ];
    }




    /**
     * get column zone_dimension enum value label
     * @param string $value
     * @return string
     */
    public static function getZoneDimensionValueLabel($value){
        $labels = self::optsZoneDimension();
        if(isset($labels[$value])){
            return $labels[$value];
        }
        return $value;
    }

    /**
     * column zone_dimension ENUM value labels
     * @return array
     */
    public static function optsZoneDimension()
    {
        return [
            self::ZONE_DIMENSION_2D => Yii::t('gip', '2 D'),
            self::ZONE_DIMENSION_3D => Yii::t('gip', '3 D'),
        ];
    }

}
